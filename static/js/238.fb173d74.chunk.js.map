{"version":3,"file":"static/js/238.fb173d74.chunk.js","mappings":"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","sources":["components/Title/Title.styled.jsx","components/Title/Title.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","service/movie-service.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const TitleSt = styled.h2`\nmargin: 0;\nfont-size: 30px;\nfont-weight: 700;\n`;\n\n","import { TitleSt } from \"./Title.styled\";\n\nconst Title = ({text}) => {\n    return <TitleSt>{ text }</TitleSt>\n}\n\nexport default Title;","import styled from \"@emotion/styled\";\n\nexport const ButtonSt = styled.button`\n  display: inline-block;\n  padding: 4px 8px;\n  border-radius: 5px;\n//   background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n   opacity: 1;\n}\n`;","import PropTypes from 'prop-types'; \nimport { ButtonSt } from './Button.styled';\n\nconst Button = ({ text, onClick }) => {\n    return <ButtonSt onClick={onClick}>{ text }</ButtonSt>\n}\n\n\nButton.propTypes = {\n    text: PropTypes.string.isRequired,\n}\n\n\nexport default Button;","import styled from \"@emotion/styled\";\n\nexport const MovieCardSt = styled.div`\ndisplay:flex;\n`;\n\nexport const WrapperMovieSt = styled.div`\npadding: 10px;\n`;\n\nexport const VoteAverageSt = styled.p`\nfont-weight: 700;\n`;\n\nexport const GenresSt = styled.p`\n`;\n\nexport const OverviewSt = styled.p`\n`;\n\n","import { BsStarFill } from 'react-icons/bs';\nimport { MovieCardSt, WrapperMovieSt, VoteAverageSt, GenresSt, OverviewSt } from \"./MovieCard.styled\";\nimport Title from 'components/Title';\n\nconst MovieCard = ({ original_title, vote_average, overview, genres = [], poster_path }) => {\n    \n    const BASE_URL = \"https://image.tmdb.org/t/p/w500\"\n    const photo = `${BASE_URL}${poster_path}`;\n    \n\n    return (<MovieCardSt>\n        <img src={photo} alt=\"\"/>\n        <WrapperMovieSt>\n            <Title text={original_title}></Title>        \n            <VoteAverageSt><BsStarFill style={{ borderColor: \"black\", color: \"orange\" }} /> {vote_average}</VoteAverageSt>\n            <GenresSt>{genres.map(el => el.name).join(', ')}</GenresSt>\n            <OverviewSt>{ overview }</OverviewSt>\n        </WrapperMovieSt>\n        </MovieCardSt>\n        \n    )\n}\n\n\nexport default MovieCard;","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const WrapperMovieDetailsSt = styled.div`\npadding: 20px;\n`;\n\nexport const NavLinkSt = styled(NavLink)`\ndisplay: block;\nfont-size: 15px;\nfont-weight: 500;\ncolor: black;\n\n  &.active {\n    color: #0a4dfb;\n  }\n`\n\nexport const InformationSt = styled.p`\nfont-size: 20px;\nfont-weight: 500;\n`;","import { useState, useEffect } from \"react\";\nimport { Outlet, useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport Button from \"components/Button\";\nimport MovieCard from \"components/MovieCard\";\nimport { WrapperMovieDetailsSt, NavLinkSt } from \"./MovieDetails.styled\";\nimport { InformationSt } from \"./MovieDetails.styled\";\nimport { getMovieInformation } from \"service/movie-service\";\n\nconst MovieDetails = () => {\n    const [movieInformation, setMovieInformation] = useState('');\n    \n    const {movieId} = useParams(); \n    const navigate = useNavigate();\n    const location = useLocation();\n\n   \n    useEffect(() => {\n        if (!movieId) {\n            return;\n        }\n        \n        // получает информацию о фильме\n        const getInformation = async () => {\n            try {\n                const information = await getMovieInformation(movieId);\n                // console.log(\"information\", information);\n                setMovieInformation(information)\n            }\n            catch (error) {\n                console.log(error.message);\n            }\n        }\n        getInformation();\n     }, [movieId])\n    \n    const { original_title, vote_average, overview, genres, poster_path } = movieInformation;\n\n        \n    return <WrapperMovieDetailsSt>\n        \n            <Button type=\"button\"\n        onClick={() => {navigate(location?.state?.from?.pathname ?? '/')\n        }} text=\"Go back\"></Button>\n        <MovieCard\n            original_title={original_title}\n            vote_average={vote_average}\n            overview={overview}\n            genres={genres}\n            poster_path={poster_path}\n        ></MovieCard>\n\n        <InformationSt>Additional information:</InformationSt>\n        <NavLinkSt to=\"cast\">Cast</NavLinkSt>\n        <NavLinkSt to=\"reviews\">Reviews</NavLinkSt>\n        <Outlet />\n    </WrapperMovieDetailsSt>;\n}\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst API_KEY = '2af9cbb95e748f3536884b81d35f838b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'; // автоматически подставляется в путь при запросе\n\n// получает список самых популярных фильмов\nexport const getTrending = async () => {\n    try {\n        const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n        // console.log(\"data.results\", data.results);\n        return data.results;\n    }\n    catch(error) {\n        console.log(\"error\", error);\n    }\n    finally {\n        console.log(\"finally getTrending\");        \n    }\n}\n\n// осуществляет поиск кинофильма по ключевому слову\nexport const getMovieByName = async (query) => {\n    try {\n        const {data} = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n        // console.log(\"data.results\", data.results);\n        return data.results;\n    }\n    catch(error) {\n        console.log(\"error\", error);\n    }\n    finally {\n        console.log(\"finally getMovieByName\");        \n    }\n}\n\n// получает полную информацию о фильме\nexport const getMovieInformation = async (movie_id) => {\n    try {\n        const {data} = await axios.get(`/movie/${movie_id}?api_key=${API_KEY}`);\n        // console.log(\"dataFilm\", data);\n        return data;\n    }\n    catch(error) {\n        console.log(\"error\", error);\n    }\n    finally {\n        console.log(\"finally getMovieInformation\");        \n    }\n}\n\n// получает информацию о актёрском составе фильма\nexport const getCastInformation = async (movie_id) => {\n    try {\n        const { data } = await axios.get(`/movie/${movie_id}/credits?api_key=${API_KEY}`);\n        // console.log(\"dataCast\", data);\n        return data;\n    }\n    catch(error) {\n        console.log(\"error\", error);\n    }\n    finally {\n        console.log(\"finally getCastInformation\");        \n    }\n}\n\n// получает обзоры\n\nexport const getMovieReviews = async (movie_id) => {\n    try {\n        const { data } = await axios.get(`/movie/${movie_id}/reviews?api_key=${API_KEY}`);\n        // console.log(\"dataReviews\", data.results);\n        return data.results;\n    }\n    catch(error) {\n        console.log(\"error\", error);\n    }\n    finally {\n        console.log(\"finally getMovieReviews\");        \n    }\n}"],"names":["TitleSt","styled","text","ButtonSt","onClick","MovieCardSt","WrapperMovieSt","VoteAverageSt","GenresSt","OverviewSt","original_title","vote_average","overview","genres","poster_path","photo","src","alt","Title","style","borderColor","color","map","el","name","join","WrapperMovieDetailsSt","NavLinkSt","NavLink","InformationSt","useState","movieInformation","setMovieInformation","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","getInformation","getMovieInformation","information","console","log","message","type","state","from","pathname","to","API_KEY","axios","getTrending","data","results","getMovieByName","query","movie_id","getCastInformation","getMovieReviews"],"sourceRoot":""}
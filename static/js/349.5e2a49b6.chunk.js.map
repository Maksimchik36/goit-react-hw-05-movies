{"version":3,"file":"static/js/349.5e2a49b6.chunk.js","mappings":"sNAEaA,EAAeC,EAAAA,EAAAA,GAAH,6CAIZC,EAAUD,EAAAA,EAAAA,GAAH,wB,SCKpB,EARmB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACZC,GAAWC,EAAAA,EAAAA,MAEjB,OAAO,SAACL,EAAD,UACFG,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OAA6B,SAACN,EAAD,WAAkB,SAAC,KAAD,CAAMO,GAAE,kBAAaF,GAAMA,GAAIA,EAAIG,MAAO,CAAEC,KAAMP,GAAYQ,MAAO,CAAEC,QAAS,SAAhF,SAA4FL,KAAhGD,U,oECLlDO,E,QAAUb,EAAAA,GAAH,yE,SCIpB,EAJc,SAAC,GAAY,IAAXc,EAAU,EAAVA,KACZ,OAAO,SAACD,EAAD,UAAWC,M,+JCDTC,E,QAAgBf,EAAAA,IAAH,wC,SC4B1B,EAvBc,WACV,OAA4BgB,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAgB,mCAAG,8GAEIC,EAAAA,EAAAA,MAFJ,OAEXlB,EAFW,OAGjBe,EAAUf,GAHO,gDAMjBmB,QAAQC,IAAI,KAAMC,SAND,yDAAH,qDAStBJ,MACA,KAGI,UAACJ,EAAD,YACJ,SAACS,EAAA,EAAD,CAAOV,KAAK,oBACZ,SAACW,EAAA,EAAD,CAAYvB,OAAQA,S,0MCxBtBwB,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAGlB,IAAMP,EAAW,mCAAG,+GAEIO,IAAAA,IAAA,sCAAyCD,IAF7C,uBAEXE,EAFW,EAEXA,KAFW,kBAIZA,EAAKC,SAJO,gCAOnBR,QAAQC,IAAI,QAAZ,MAPmB,yBAUnBD,QAAQC,IAAI,uBAVO,4EAAH,qDAeXQ,EAAc,mCAAG,WAAOC,GAAP,kGAEDJ,IAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDK,IAFnD,uBAEfH,EAFe,EAEfA,KAFe,kBAIfA,EAAKC,SAJU,gCAOtBR,QAAQC,IAAI,QAAZ,MAPsB,yBAUtBD,QAAQC,IAAI,0BAVU,4EAAH,sDAedU,EAAmB,mCAAG,WAAOC,GAAP,kGAENN,IAAAA,IAAA,iBAAoBM,EAApB,oBAAwCP,IAFlC,uBAEpBE,EAFoB,EAEpBA,KAFoB,kBAIpBA,GAJoB,gCAO3BP,QAAQC,IAAI,QAAZ,MAP2B,yBAU3BD,QAAQC,IAAI,+BAVe,4EAAH,sDAenBY,EAAkB,mCAAG,WAAOD,GAAP,kGAEHN,IAAAA,IAAA,iBAAoBM,EAApB,4BAAgDP,IAF7C,uBAElBE,EAFkB,EAElBA,KAFkB,kBAInBA,GAJmB,gCAO1BP,QAAQC,IAAI,QAAZ,MAP0B,yBAU1BD,QAAQC,IAAI,8BAVc,4EAAH,sDAgBlBa,EAAe,mCAAG,WAAOF,GAAP,kGAEAN,IAAAA,IAAA,iBAAoBM,EAApB,4BAAgDP,IAFhD,uBAEfE,EAFe,EAEfA,KAFe,kBAIhBA,EAAKC,SAJW,gCAOvBR,QAAQC,IAAI,QAAZ,MAPuB,yBAUvBD,QAAQC,IAAI,2BAVW,4EAAH","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","service/movie-service.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const MoviesListSt = styled.ul`\npadding-left: 20px;\n`;\n\nexport const MovieSt = styled.li`\n`;","import { Link, useLocation } from \"react-router-dom\";\nimport { MoviesListSt, MovieSt } from \"./MoviesList.styled\";\n\nconst MoviesList = ({ movies }) => {\n    const location = useLocation();\n\n    return <MoviesListSt>\n        {movies.map(({ id, original_title }) => (<MovieSt key={id}><Link to={`/movies/${id}`} id={id} state={{ from: location }} style={{ display: \"block\" }}>{original_title}</Link></MovieSt>))}\n    </MoviesListSt>\n}\n\nexport default MoviesList;","import styled from '@emotion/styled';\n\nexport const TitleSt = styled.h2`\nmargin: 0;\nfont-size: 30px;\nfont-weight: 700;\n`;\n\n","import { TitleSt } from \"./Title.styled\";\n\nconst Title = ({text}) => {\n    return <TitleSt>{ text }</TitleSt>\n}\n\nexport default Title;","import styled from \"@emotion/styled\";\n\nexport const WrapperHomeSt = styled.div`\npadding: 20px;\n`;","// import MovieDetails from \"pages/MovieDetails\";\nimport { useState, useEffect } from \"react\";\nimport { getTrending } from 'service/movie-service';\nimport Title from \"components/Title\";\nimport MoviesList from \"components/MoviesList\";\nimport { WrapperHomeSt } from \"./Home.styled\";\n\nconst Home =  () => {\n    const [movies, setMovies] = useState([])\n\n    useEffect(() => {\n        const getPopularMovies = async () => {\n            try {\n                const movies = await getTrending();\n                setMovies(movies);\n            }\n            catch (error) {\n                console.log(error.message);\n            }\n        }\n        getPopularMovies();\n     }, [])\n    \n    \n    return (<WrapperHomeSt>\n        <Title text=\"Trending today\"></Title>\n        <MoviesList movies={movies}></MoviesList></WrapperHomeSt>                  \n    );\n}\n\nexport default Home;","import axios from 'axios';\n\nconst API_KEY = '2af9cbb95e748f3536884b81d35f838b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'; // автоматически подставляется в путь при запросе\n\n// получает список самых популярных фильмов\nexport const getTrending = async () => {\n    try {\n        const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n        // console.log(\"data.results\", data.results);\n        return data.results;\n    }\n    catch(error) {\n        console.log(\"error\", error);\n    }\n    finally {\n        console.log(\"finally getTrending\");        \n    }\n}\n\n// осуществляет поиск кинофильма по ключевому слову\nexport const getMovieByName = async (query) => {\n    try {\n        const {data} = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n        // console.log(\"data.results\", data.results);\n        return data.results;\n    }\n    catch(error) {\n        console.log(\"error\", error);\n    }\n    finally {\n        console.log(\"finally getMovieByName\");        \n    }\n}\n\n// получает полную информацию о фильме\nexport const getMovieInformation = async (movie_id) => {\n    try {\n        const {data} = await axios.get(`/movie/${movie_id}?api_key=${API_KEY}`);\n        // console.log(\"dataFilm\", data);\n        return data;\n    }\n    catch(error) {\n        console.log(\"error\", error);\n    }\n    finally {\n        console.log(\"finally getMovieInformation\");        \n    }\n}\n\n// получает информацию о актёрском составе фильма\nexport const getCastInformation = async (movie_id) => {\n    try {\n        const { data } = await axios.get(`/movie/${movie_id}/credits?api_key=${API_KEY}`);\n        // console.log(\"dataCast\", data);\n        return data;\n    }\n    catch(error) {\n        console.log(\"error\", error);\n    }\n    finally {\n        console.log(\"finally getCastInformation\");        \n    }\n}\n\n// получает обзоры\n\nexport const getMovieReviews = async (movie_id) => {\n    try {\n        const { data } = await axios.get(`/movie/${movie_id}/reviews?api_key=${API_KEY}`);\n        // console.log(\"dataReviews\", data.results);\n        return data.results;\n    }\n    catch(error) {\n        console.log(\"error\", error);\n    }\n    finally {\n        console.log(\"finally getMovieReviews\");        \n    }\n}"],"names":["MoviesListSt","styled","MovieSt","movies","location","useLocation","map","id","original_title","to","state","from","style","display","TitleSt","text","WrapperHomeSt","useState","setMovies","useEffect","getPopularMovies","getTrending","console","log","message","Title","MoviesList","API_KEY","axios","data","results","getMovieByName","query","getMovieInformation","movie_id","getCastInformation","getMovieReviews"],"sourceRoot":""}